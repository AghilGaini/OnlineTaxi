1-2 :
Snapp.DataAccessLayer -> Entities,Context
Snapp.Core -> Generators,Interfaces,Securities,Senders,Services,ViewModels
*Add References  these two projects to the snapp.site project
---------------------------------------------------------------------------------------------------------------
1-3 :
install these for EFCore ->
	Microsoft.EntityFrameworkCore
	Microsoft.EntityFrameworkCore.Tools
	Microsoft.EntityFrameworkCore.Sql
---------------------------------------------------------------------------------------------------------------
1-4 :
Create static class for send SMS
---------------------------------------------------------------------------------------------------------------
1-5 :
Create static class for send Email
---------------------------------------------------------------------------------------------------------------
1-6 :
Generators:
	CodeGenerators: GetActiveCode,GetId,GetFileName,GetOrderCode
	DateTimeGenerators : GetShamsiDate,GetShamsiTime
---------------------------------------------------------------------------------------------------------------
1-7 :
Securities : 
	HashEncode : GetHashCode
---------------------------------------------------------------------------------------------------------------
1-8 :
Startup:
	services.AddMvc(options => options.EnableEndpoinRouting = false)
	app.UseMvcWithDefaultRoute()
---------------------------------------------------------------------------------------------------------------
1-9 :
Add DbContext in startup and use migration to create Database
---------------------------------------------------------------------------------------------------------------
2-1 :
[DatabaseGenerated(DatabaseGeneratedOptions.None)] --> dont use identity for primary key
Create Role table : ID,Title,Name
---------------------------------------------------------------------------------------------------------------
2-2 :
???? ToListAsync
**** Interfaces must be inherited from IDisposable
---------------------------------------------------------------------------------------------------------------
2-3 :
Test for Repository Pattern
---------------------------------------------------------------------------------------------------------------
2-4 :
User Table : Id,RoleId,Username,Password,Token,IsActive,
In Role Table : public virtual ICollection<User> Users
In User Table : public virtual Role  -->(with [ForeignKey("RoleID")] , public Virtual UserDetail 
UserDetail Table : [Key][ForeignKey("User")]UserId,Date,Time,FullName,BirthDate,Virtual User
---------------------------------------------------------------------------------------------------------------
2-5 and 2-6:
Create wlcome page and get mobile number 
---------------------------------------------------------------------------------------------------------------
2-7 : 
???? Task.FromResult(myObject)
Create Service for Register user(if user is new : create user and send sms else just send sms )
**** use async await
---------------------------------------------------------------------------------------------------------------
2-8 : 
Test for register a user
---------------------------------------------------------------------------------------------------------------
2-9 :
---------------------------------------------------------------------------------------------------------------
2-10 : 
Create Active method in account service to active a user
---------------------------------------------------------------------------------------------------------------
2-11 :
Create Active action and view for users
use from sweet.js (sweet alert) for showing messages
-> swal("Ekhtar","Code eshtebah vared shode ast","Warning",{button : "motevajeh shodam"})
---------------------------------------------------------------------------------------------------------------
**** What is TempData[] its life time)
_________________________________________________________________________________________________________________
3-1 :
---------------------------------------------------------------------------------------------------------------
3-2 : 
add "Long wallet" propery to User Table
Create Drive Table : [foreign key]UserId,NationalCode,Tel,Address,Virtual User
In the User Table add Drive : Virtual Driver
---------------------------------------------------------------------------------------------------------------
3-3 : 
in the Drive table add : string CarCode , string Img,string Avatar,bool IsConfirm
Create Table Car : Id,Name,vitual ICollection<Driver> Drivers
Create Table Color : Id,Name,Code,vitual ICollection<Driver> Drivers
in the Drive table add : Guid? CardId,Guid? ColorId, [Foreign Key]Virtial Color,[Foreign Key]Virtual Car
Create Drive Folder in wwwroot/img
---------------------------------------------------------------------------------------------------------------
3-4 : 
Create RegisteDrive action and controller and View
---------------------------------------------------------------------------------------------------------------
3-5 : 
write a function to validate Iranian NationalCode
---------------------------------------------------------------------------------------------------------------
3-6 : 
Use "Creative Tim License" (rtl version) and Create AdminController and its view(index) with this template.
(create new Layout => _dashbordLayout)
---------------------------------------------------------------------------------------------------------------
3-7 : 
Create CRUD actions for Car Entity
---------------------------------------------------------------------------------------------------------------
3-8 : 
Create Views and controller for show and create list of cars
---------------------------------------------------------------------------------------------------------------
3-9 : Search on table with jquery and manage cars CRUD actions

________________________________________________________________________________________________________________________
________________________________________________________________________________________________________________________

4-1 : Create CRUD actions for color interface
---------------------------------------------------------------------------------------------------------------
4-2 : Controller and Action for show,Edit,Delete Colors
**get color code and show it with input type =color
---------------------------------------------------------------------------------------------------------------
4-3 : Create RateType table : Id,Name,Ok,ViewOrder
---------------------------------------------------------------------------------------------------------------
4-4 : Create CRUD action for RateType interface
---------------------------------------------------------------------------------------------------------------
4-5 : Cotnroller and Actions for show,edit,delete RateTypes
---------------------------------------------------------------------------------------------------------------
4-6 : Create table Setting : Id,Name,Description,About,Terms,Tel,Fax,IsWeatherEffect,IsDistanceEffect
---------------------------------------------------------------------------------------------------------------
4-7 : Controller and Actions for Setting  (Except price setting and About)
---------------------------------------------------------------------------------------------------------------
4-8 : Controller and Actions for Price Setting  
---------------------------------------------------------------------------------------------------------------
4-9 : Controller and Actions for About Setting 
** Use CkEditor
---------------------------------------------------------------------------------------------------------------
4-10 : Controller and Actions for Terms Setting  (Use ckEditor)
________________________________________________________________________________________________________________________
________________________________________________________________________________________________________________________
5-1 : Create PriceType Table :Id,Name,int start,int end,long price
---------------------------------------------------------------------------------------------------------------
5-2 : CRUD action in interface for PriceType table
---------------------------------------------------------------------------------------------------------------
5-3 : CRUD controller and action for PriceType 
---------------------------------------------------------------------------------------------------------------
5-4 : Get Accept for deleting with weetAlert
---------------------------------------------------------------------------------------------------------------
5-5 : Create MonthlyType Table : Id,Name,Start,End,decimal Percent
---------------------------------------------------------------------------------------------------------------
5-6 : Create CRUD interface for MonthlyType table
---------------------------------------------------------------------------------------------------------------
5-7 : Create CRUD Controller and Actions for MonthlyType
________________________________________________________________________________________________________________________
________________________________________________________________________________________________________________________
6-1 : Add Humidity table : Id,Name,Start,End,Percent
Add Temperature table : Id,Name,Start,End,Percent
---------------------------------------------------------------------------------------------------------------
6-2 : Add CRUD interface for Humidity and Temperature
---------------------------------------------------------------------------------------------------------------
6-3 : Add Controller and View for Humidity and Temperature
---------------------------------------------------------------------------------------------------------------
6-4 : 
---------------------------------------------------------------------------------------------------------------
6-5 : Install EPPlus pakage (for excel files)
-Create sample excel file and put it in : wwwroot/file/
-for download sample file create <a> with with target="_blank"
-for upload use IForm 
-for upload the <form> must use enctype="multipart/form-data"
*Create import excel for Car table
________________________________________________________________________________________________________________________
________________________________________________________________________________________________________________________
7-1 : CRUD interfaces for Role Table
---------------------------------------------------------------------------------------------------------------
7-2 , 7-3 : CRUD Controllers and Views for role
---------------------------------------------------------------------------------------------------------------
7-4 : CRUD for adding user (with selecting its role)
---------------------------------------------------------------------------------------------------------------
7-5 : Create SelectList and pass it in Viewbag to fill RoleId when adding user
---------------------------------------------------------------------------------------------------------------
7-6 : Complete User CRUD 
****What do "include" for showing role in User page??????????????
---------------------------------------------------------------------------------------------------------------
7-7 : Update users with respect to UserDetail and Driver tables
________________________________________________________________________________________________________________________
________________________________________________________________________________________________________________________
8-1 : Add 3 extra action for Driver in User Index View : 1-car info 2-Uer info(driver) 3-image
---------------------------------------------------------------------------------------------------------------
8-2 : Install Microsoft.AspNetCore.Mvc in Core project
Create ViewModel DeriverPropViewModel : string NationalCode,string Tel,string Address(DataType(DataType.MultiLineText))),IFormFile Avatar,string AvatarName 
Create Interface Actino for User : Update DriverProp
upload driver avatar image (21:30)
---------------------------------------------------------------------------------------------------------------
8-3 : Create form for update DriverProp Info => form must be : enctype="multippart/form-data",  avatar Property must hav type="file"
---------------------------------------------------------------------------------------------------------------
8-4 : check for error when edit other info(except image)
delete old image when new uploaded
---------------------------------------------------------------------------------------------------------------
8-5 : Create DriveImgViewModel : IFormFile img.string imgName,bool IsConfirm 
create page for upload Certificate image
---------------------------------------------------------------------------------------------------------------
8-6: Create DriverCarViewModel : Guid CarId,Guid ColorId,string CarCode
for create comboBox of cards and colors : 
ViewBag.CarId = New SelectList(GetCars(),"id","Name",model.cardId);
ViewBag.ColorId = New SelectList(GetColors(),"id","Name",model.colorId);
<select asp-for="RoleId" asp-Items="ViewBag.ColorId"></select>
---------------------------------------------------------------------------------------------------------------
8-7 : Create UserEditViewModel : RoleId,Username,Fullname,BirthDate,IsActive
update userDetail when click on update user action
use persian calender to store and show BirthDate 
---------------------------------------------------------------------------------------------------------------
9-1 :
---------------------------------------------------------------------------------------------------------------
9-2 : in startup : 
Configure servive : addAuthentication and use cookie method to authnetication






























